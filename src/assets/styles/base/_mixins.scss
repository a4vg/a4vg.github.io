@mixin resizeAspectRatio($height) {
  height: $height;
  width: auto;
}
@mixin twoColumnContent($leftWidth, $rightWidth: calc(100%-#{$leftWidth})) {
  width:100%;
  &>:nth-child(2n-1) {
    width: $leftWidth;
    float: left;
  }
  &>:nth-child(2n) {
    width: $rightWidth;
    float: left;
  }
}

@mixin scrollingWrapper {
  white-space: nowrap;
  overflow-x: scroll;
  overflow-y: hidden;
  & > div {
    display: inline-block;
    margin-right: 1em;
  }
}


/** From: https://blog.prototypr.io/how-i-theme-my-react-app-with-sass-414e8f905541
 *
 * theme-aware - Change value of a css property based on the currently active theme
 *
 * @param  {key}     CSS property
 * @param  {value}   Value name defined in the themes under _themes.scss
 *
 * @example - @include theme-aware('background', 'color-background', $themes);
 * @returns - background: #FFF;
 */
@mixin theme-aware($key, $value, $themes) {
    // #{$key}: map-get(map-get($themes, $theme-name), $value)
    @each $theme-name, $theme-color in $themes {
        .theme-#{$theme-name} & {
            #{$key}: map-get(map-get($themes, $theme-name), $value)
        }
    }
};